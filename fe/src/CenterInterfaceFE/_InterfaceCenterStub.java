package CenterInterfaceFE;


/**
* CenterInterfaceFE/_InterfaceCenterStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from InterfaceMTL.idl
* Wednesday, August 2, 2017 11:12:54 PM EDT
*/

public class _InterfaceCenterStub extends org.omg.CORBA.portable.ObjectImpl implements CenterInterfaceFE.InterfaceCenter
{

  public String createTRecord (String suc, String mi, String fn, String ln, String ad, String ph, String sp, String lo)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("createTRecord", true);
                $out.write_string (suc);
                $out.write_string (mi);
                $out.write_string (fn);
                $out.write_string (ln);
                $out.write_string (ad);
                $out.write_string (ph);
                $out.write_string (sp);
                $out.write_string (lo);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return createTRecord (suc, mi, fn, ln, ad, ph, sp, lo        );
            } finally {
                _releaseReply ($in);
            }
  } // createTRecord

  public String createSRecord (String suc, String mi, String fn, String ln, boolean s, String[] CourseRegistered)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("createSRecord", true);
                $out.write_string (suc);
                $out.write_string (mi);
                $out.write_string (fn);
                $out.write_string (ln);
                $out.write_boolean (s);
                CenterInterfaceFE.strHelper.write ($out, CourseRegistered);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return createSRecord (suc, mi, fn, ln, s, CourseRegistered        );
            } finally {
                _releaseReply ($in);
            }
  } // createSRecord

  public String getRecordCounts (String suc, String mi)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getRecordCounts", true);
                $out.write_string (suc);
                $out.write_string (mi);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getRecordCounts (suc, mi        );
            } finally {
                _releaseReply ($in);
            }
  } // getRecordCounts

  public String editRecord (String suc, String mi, String recordID, String fieldname, String[] newvalue)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("editRecord", true);
                $out.write_string (suc);
                $out.write_string (mi);
                $out.write_string (recordID);
                $out.write_string (fieldname);
                CenterInterfaceFE.strHelper.write ($out, newvalue);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return editRecord (suc, mi, recordID, fieldname, newvalue        );
            } finally {
                _releaseReply ($in);
            }
  } // editRecord

  public String MtransferRecord (String suc, String mid, String rid, String remoteName)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("MtransferRecord", true);
                $out.write_string (suc);
                $out.write_string (mid);
                $out.write_string (rid);
                $out.write_string (remoteName);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return MtransferRecord (suc, mid, rid, remoteName        );
            } finally {
                _releaseReply ($in);
            }
  } // MtransferRecord

  public void print (String mi)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("print", true);
                $out.write_string (mi);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                print (mi        );
            } finally {
                _releaseReply ($in);
            }
  } // print

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:CenterInterfaceFE/InterfaceCenter:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _InterfaceCenterStub
