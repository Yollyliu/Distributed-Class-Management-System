package CenterInterface;


/**
* CenterInterface/InterfaceCenterPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from InterfaceMTL.idl
* Saturday, July 29, 2017 9:41:06 PM EDT
*/

public abstract class InterfaceCenterPOA extends org.omg.PortableServer.Servant
 implements CenterInterface.InterfaceCenterOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("createTRecord", new java.lang.Integer (0));
    _methods.put ("createSRecord", new java.lang.Integer (1));
    _methods.put ("getRecordCounts", new java.lang.Integer (2));
    _methods.put ("editRecord", new java.lang.Integer (3));
    _methods.put ("StransferRecord", new java.lang.Integer (4));
    _methods.put ("MtransferRecord", new java.lang.Integer (5));
    _methods.put ("register", new java.lang.Integer (6));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // CenterInterface/InterfaceCenter/createTRecord
       {
         String mi = in.read_string ();
         String fn = in.read_string ();
         String ln = in.read_string ();
         String ad = in.read_string ();
         String ph = in.read_string ();
         String sp = in.read_string ();
         String lo = in.read_string ();
         String $result = null;
         $result = this.createTRecord (mi, fn, ln, ad, ph, sp, lo);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 1:  // CenterInterface/InterfaceCenter/createSRecord
       {
         String mi = in.read_string ();
         String fn = in.read_string ();
         String ln = in.read_string ();
         boolean s = in.read_boolean ();
         String CourseRegistered[] = CenterInterface.strHelper.read (in);
         String $result = null;
         $result = this.createSRecord (mi, fn, ln, s, CourseRegistered);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 2:  // CenterInterface/InterfaceCenter/getRecordCounts
       {
         String mi = in.read_string ();
         String $result = null;
         $result = this.getRecordCounts (mi);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 3:  // CenterInterface/InterfaceCenter/editRecord
       {
         String mi = in.read_string ();
         String recordID = in.read_string ();
         String fieldname = in.read_string ();
         String newvalue[] = CenterInterface.strHelper.read (in);
         String $result = null;
         $result = this.editRecord (mi, recordID, fieldname, newvalue);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 4:  // CenterInterface/InterfaceCenter/StransferRecord
       {
         String site = in.read_string ();
         byte record[] = CenterInterface.reHelper.read (in);
         String rid = in.read_string ();
         String mi = in.read_string ();
         String fromN = in.read_string ();
         this.StransferRecord (site, record, rid, mi, fromN);
         out = $rh.createReply();
         break;
       }

       case 5:  // CenterInterface/InterfaceCenter/MtransferRecord
       {
         String mid = in.read_string ();
         String rid = in.read_string ();
         String remoteName = in.read_string ();
         String $result = null;
         $result = this.MtransferRecord (mid, rid, remoteName);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 6:  // CenterInterface/InterfaceCenter/register
       {
         CenterInterface.InterfaceCenter ifc = CenterInterface.InterfaceCenterHelper.read (in);
         int infoNo = in.read_long ();
         this.register (ifc, infoNo);
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:CenterInterface/InterfaceCenter:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public InterfaceCenter _this() 
  {
    return InterfaceCenterHelper.narrow(
    super._this_object());
  }

  public InterfaceCenter _this(org.omg.CORBA.ORB orb) 
  {
    return InterfaceCenterHelper.narrow(
    super._this_object(orb));
  }


} // class InterfaceCenterPOA
